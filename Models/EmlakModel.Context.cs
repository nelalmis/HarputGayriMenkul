//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HarputGayriMenkul.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EMLAKDBEntities : DbContext
    {
        public EMLAKDBEntities()
            : base("name=EMLAKDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Advert> Advert { get; set; }
        public DbSet<AdvertDetail> AdvertDetail { get; set; }
        public DbSet<AdvertEnvironmentFeature> AdvertEnvironmentFeature { get; set; }
        public DbSet<AdvertExteriorFeature> AdvertExteriorFeature { get; set; }
        public DbSet<AdvertInternalFeature> AdvertInternalFeature { get; set; }
        public DbSet<AdvertOwner> AdvertOwner { get; set; }
        public DbSet<Category> Category { get; set; }
        public DbSet<City> City { get; set; }
        public DbSet<County> County { get; set; }
        public DbSet<CurrencyType> CurrencyType { get; set; }
        public DbSet<EnvironmentFeatures> EnvironmentFeatures { get; set; }
        public DbSet<ExteriorFeatures> ExteriorFeatures { get; set; }
        public DbSet<HeatingType> HeatingType { get; set; }
        public DbSet<InternalFeatures> InternalFeatures { get; set; }
        public DbSet<Picture> Picture { get; set; }
        public DbSet<Quarter> Quarter { get; set; }
        public DbSet<RoomCount> RoomCount { get; set; }
        public DbSet<StructureCondition> StructureCondition { get; set; }
        public DbSet<StructureType> StructureType { get; set; }
        public DbSet<SuitableCondition> SuitableCondition { get; set; }
        public DbSet<tbl_pk> tbl_pk { get; set; }
        public DbSet<tbl_semt> tbl_semt { get; set; }
        public DbSet<User> User { get; set; }
        public DbSet<UserStatus> UserStatus { get; set; }
        public DbSet<Variety> Variety { get; set; }
    
        public virtual int ins_Advert(string title, Nullable<decimal> price, Nullable<int> squareMeters, Nullable<System.DateTime> creationDate, Nullable<int> quarterID, Nullable<int> categoryID, Nullable<int> varietyID, Nullable<int> userID)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var squareMetersParameter = squareMeters.HasValue ?
                new ObjectParameter("SquareMeters", squareMeters) :
                new ObjectParameter("SquareMeters", typeof(int));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var quarterIDParameter = quarterID.HasValue ?
                new ObjectParameter("QuarterID", quarterID) :
                new ObjectParameter("QuarterID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var varietyIDParameter = varietyID.HasValue ?
                new ObjectParameter("VarietyID", varietyID) :
                new ObjectParameter("VarietyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_Advert", titleParameter, priceParameter, squareMetersParameter, creationDateParameter, quarterIDParameter, categoryIDParameter, varietyIDParameter, userIDParameter);
        }
    
        public virtual int ins_AdvertDetail(Nullable<int> advertID, Nullable<int> roomCount, Nullable<int> hallCount, Nullable<short> bathCount, Nullable<int> buildingAge, Nullable<int> floors, Nullable<int> onWhichFloor, string heating, Nullable<short> isFurnished, Nullable<short> isAvailableCredit, string description, string location)
        {
            var advertIDParameter = advertID.HasValue ?
                new ObjectParameter("AdvertID", advertID) :
                new ObjectParameter("AdvertID", typeof(int));
    
            var roomCountParameter = roomCount.HasValue ?
                new ObjectParameter("RoomCount", roomCount) :
                new ObjectParameter("RoomCount", typeof(int));
    
            var hallCountParameter = hallCount.HasValue ?
                new ObjectParameter("HallCount", hallCount) :
                new ObjectParameter("HallCount", typeof(int));
    
            var bathCountParameter = bathCount.HasValue ?
                new ObjectParameter("BathCount", bathCount) :
                new ObjectParameter("BathCount", typeof(short));
    
            var buildingAgeParameter = buildingAge.HasValue ?
                new ObjectParameter("BuildingAge", buildingAge) :
                new ObjectParameter("BuildingAge", typeof(int));
    
            var floorsParameter = floors.HasValue ?
                new ObjectParameter("Floors", floors) :
                new ObjectParameter("Floors", typeof(int));
    
            var onWhichFloorParameter = onWhichFloor.HasValue ?
                new ObjectParameter("OnWhichFloor", onWhichFloor) :
                new ObjectParameter("OnWhichFloor", typeof(int));
    
            var heatingParameter = heating != null ?
                new ObjectParameter("Heating", heating) :
                new ObjectParameter("Heating", typeof(string));
    
            var isFurnishedParameter = isFurnished.HasValue ?
                new ObjectParameter("IsFurnished", isFurnished) :
                new ObjectParameter("IsFurnished", typeof(short));
    
            var isAvailableCreditParameter = isAvailableCredit.HasValue ?
                new ObjectParameter("IsAvailableCredit", isAvailableCredit) :
                new ObjectParameter("IsAvailableCredit", typeof(short));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_AdvertDetail", advertIDParameter, roomCountParameter, hallCountParameter, bathCountParameter, buildingAgeParameter, floorsParameter, onWhichFloorParameter, heatingParameter, isFurnishedParameter, isAvailableCreditParameter, descriptionParameter, locationParameter);
        }
    
        public virtual int ins_AdvertExteriorFeature(Nullable<int> advertID, Nullable<int> exteriorFeatureID)
        {
            var advertIDParameter = advertID.HasValue ?
                new ObjectParameter("AdvertID", advertID) :
                new ObjectParameter("AdvertID", typeof(int));
    
            var exteriorFeatureIDParameter = exteriorFeatureID.HasValue ?
                new ObjectParameter("ExteriorFeatureID", exteriorFeatureID) :
                new ObjectParameter("ExteriorFeatureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_AdvertExteriorFeature", advertIDParameter, exteriorFeatureIDParameter);
        }
    
        public virtual int ins_InternalFeature(Nullable<int> advertID, Nullable<int> internalFeatureID)
        {
            var advertIDParameter = advertID.HasValue ?
                new ObjectParameter("AdvertID", advertID) :
                new ObjectParameter("AdvertID", typeof(int));
    
            var internalFeatureIDParameter = internalFeatureID.HasValue ?
                new ObjectParameter("InternalFeatureID", internalFeatureID) :
                new ObjectParameter("InternalFeatureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_InternalFeature", advertIDParameter, internalFeatureIDParameter);
        }
    
        public virtual int ins_Picture(string pictureName, string pictureWay, Nullable<short> isVitrin, Nullable<int> advertID)
        {
            var pictureNameParameter = pictureName != null ?
                new ObjectParameter("PictureName", pictureName) :
                new ObjectParameter("PictureName", typeof(string));
    
            var pictureWayParameter = pictureWay != null ?
                new ObjectParameter("PictureWay", pictureWay) :
                new ObjectParameter("PictureWay", typeof(string));
    
            var isVitrinParameter = isVitrin.HasValue ?
                new ObjectParameter("IsVitrin", isVitrin) :
                new ObjectParameter("IsVitrin", typeof(short));
    
            var advertIDParameter = advertID.HasValue ?
                new ObjectParameter("AdvertID", advertID) :
                new ObjectParameter("AdvertID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_Picture", pictureNameParameter, pictureWayParameter, isVitrinParameter, advertIDParameter);
        }
    
        public virtual ObjectResult<sel_Advert_Result> sel_Advert(Nullable<int> advertID)
        {
            var advertIDParameter = advertID.HasValue ?
                new ObjectParameter("AdvertID", advertID) :
                new ObjectParameter("AdvertID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sel_Advert_Result>("sel_Advert", advertIDParameter);
        }
    }
}
